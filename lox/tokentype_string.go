// Code generated by "stringer -type TokenType token/tokentype.go"; DO NOT EDIT.

package lox

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenTypeLeftParen-1]
	_ = x[TokenTypeRightParen-2]
	_ = x[TokenTypeLeftBrace-3]
	_ = x[TokenTypeRightBrace-4]
	_ = x[TokenTypeComma-5]
	_ = x[TokenTypeDot-6]
	_ = x[TokenTypeMinus-7]
	_ = x[TokenTypePlus-8]
	_ = x[TokenTypeSemiColon-9]
	_ = x[TokenTypeSlash-10]
	_ = x[TokenTypeStar-11]
	_ = x[TokenTypeBang-12]
	_ = x[TokenTypeBangEqual-13]
	_ = x[TokenTypeEqual-14]
	_ = x[TokenTypeEqualEqual-15]
	_ = x[TokenTypeGreater-16]
	_ = x[TokenTypeGreaterEqual-17]
	_ = x[TokenTypeLess-18]
	_ = x[TokenTypeLessEqual-19]
	_ = x[TokenTypeIdentifier-20]
	_ = x[TokenTypeString-21]
	_ = x[TokenTypeNumber-22]
	_ = x[TokenTypeAnd-23]
	_ = x[TokenTypeClass-24]
	_ = x[TokenTypeElse-25]
	_ = x[TokenTypeFalse-26]
	_ = x[TokenTypeFun-27]
	_ = x[TokenTypeFor-28]
	_ = x[TokenTypeIf-29]
	_ = x[TokenTypeNil-30]
	_ = x[TokenTypeOr-31]
	_ = x[TokenTypePrint-32]
	_ = x[TokenTypeReturn-33]
	_ = x[TokenTypeSuper-34]
	_ = x[TokenTypeThis-35]
	_ = x[TokenTypeVar-36]
	_ = x[TokenTypeWhile-37]
	_ = x[TokenTypeTrue-38]
	_ = x[TokenTypeEOF-39]
}

const _TokenType_name = "LEFT_PARENRIGHT_PARENLEFT_BRACERIGHT_BRACECOMMADOTMINUSPLUSSEMICOLONSLASHSTARBANGBANG_EQUALEQUALEQUAL_EQUALGREATERGREATER_EQUALLESSLESS_EQUALIDENTIFIERSTRINGNUMBERANDCLASSELSEFALSEFUNFORIFNILORPRINTRETURNSUPERTHISVARWHILETRUEEOF"

var _TokenType_index = [...]uint8{0, 10, 21, 31, 42, 47, 50, 55, 59, 68, 73, 77, 81, 91, 96, 107, 114, 127, 131, 141, 151, 157, 163, 166, 171, 175, 180, 183, 186, 188, 191, 193, 198, 204, 209, 213, 216, 221, 225, 228}

func (i TokenType) String() string {
	i -= 1
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
